# -*- coding: utf-8 -*-
"""Analysis on covid data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bLpQO5YO9eMDSCdbE7_gOEknu7j4n3HW

## 1. Getting the tools ready:
"""

# eda
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""## 2. Getting the data ready:
#### i. Loading the data:
**Data Dictionary**  
1. location- this is the country for which the variants information is provided;
2. date - date for the data entry;
3. variant - this is the variant corresponding to this data entry;
4. num_sequences - the number of sequences processed (for the country, variant and date);
5. perc_sequences - percentage of sequences from the total number of sequences (for the country, variant and date);
6. numsequencestotal - total number of sequences (for the country, variant and date);
"""

data = pd.read_csv('/content/covid-variants.csv')

data.head()

"""#### ii. Inspect the data quality"""

data.info()

### missing values?
data.isna().sum()

### coverting the date column from string/object to datetime
data['date'] = pd.to_datetime(data['date'])

data.info()

"""iii. Basic EDA"""

### how many variants are there in total?
print('Total Varients:', data['variant'].nunique())
print('Varients: ', data['variant'].unique())

### how many rows/obs we have for each varient
plt.figure(figsize=(10,6))
data['variant'].value_counts().plot.bar()
plt.title('Rows/obs we have for each varient')
plt.xticks(rotation=70)
plt.show()

### how many countries we have in total?
print('Total Countries:', data['location'].nunique())
print('Countries: ', data['location'].unique())

### how many rows/obs we have for each location
data['location'].value_counts().sort_values(ascending=False).head(10).plot.barh()
plt.title('Top 10 Countries by number of rows/obs:')
plt.show()

### total number of sequences per location
total_sequences_per_country = data.groupby('location')['num_sequences_total'].sum().sort_values(ascending=False)

top_ten_by_seq = pd.DataFrame(total_sequences_per_country.head(10)).reset_index()

sns.barplot(data = top_ten_by_seq, x='location', y='num_sequences_total')
plt.xticks(rotation=60)
plt.ticklabel_format(style='plain', axis='y')
plt.title('Top 10 contries bt total number of sequences.')
plt.show()

### grouby date
### date on which top num of sequences were there
data.groupby('date')['num_sequences_total'].max().sort_values().tail(1)

data.groupby(['date', 'location'])['num_sequences_total'].max()

